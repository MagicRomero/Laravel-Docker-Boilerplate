version: "3"

networks:
  laravel:
    driver: bridge

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - 8080:80
      # - 4443:443
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - db
      - mailhog
    networks:
      - laravel

  db:
    image: mariadb
    container_name: mariadb
    restart: unless-stopped
    tty: true
    ports:
      - 3307:3306
    volumes:
      - ./database:/var/lib/mysql
    environment:
      MYSQL_DATABASE: sendizer
      MYSQL_USER: sendizer
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mariadb
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - "8082:80"
    environment:
      - PMA_HOST=mysql
      - PMA_ARBITRARY=1
      - PMA_PORT=3306
      - HIDE_PHP_VERSION=true
    networks:
      - laravel
    links:
      - db
  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - laravel

  npm:
    image: mhart/alpine-node
    container_name: npm
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    ports:
      - 6001:6001
    depends_on:
      - redis
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - db
    working_dir: /var/www/html
    user: laravel
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel
